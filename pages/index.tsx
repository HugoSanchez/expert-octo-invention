import type { NextPage } from 'next';
import { useState, useEffect } from 'react';
import {ethers} from 'ethers';
// import handler from './api/hello';
import {encrypt, encryptSafely} from '@metamask/eth-sig-util';
const ethUtil = require('ethereumjs-util');
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';

const Home: NextPage = () => {

	/** 
	let [provider, setProvider] = useState()

	useEffect(() => {
		let prov = getProvider()
	}, [])


	const getProvider = async () => {
		const provider = new ethers.providers.Web3Provider(window.ethereum, "any");
		// Prompt user for account connections
		await provider.send("eth_requestAccounts", []);
		const signer = provider.getSigner();
		const account = await signer.getAddress()
		const pubKey = await provider.send("eth_getEncryptionPublicKey", [account])
		
		let dec = await encryptMessage(pubKey, "hello world", provider, account)
		console.log('Dec: ', dec)
	}

	const encryptMessage = async (pubKey: string, message: string, provider: any, account: any) => {
		const version = 'x25519-xsalsa20-poly1305'; 
		let encrypted = await encryptSafely({data: message, publicKey: pubKey, version})

		const encryptedMessage = ethUtil.bufferToHex(
			Buffer.from(
			  JSON.stringify(
				encryptSafely({
				  	publicKey: pubKey,
				   	data: 'Hello world!',
				  	version: 'x25519-xsalsa20-poly1305'
				})
			  ),
			  'utf8'
			)
		  );

		console.log("Enc Message: ", encryptedMessage)
		return await provider.send('eth_decrypt', [encryptedMessage, account])
	}
*/

  	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className={styles.main}>
				<h1 className="text-indigo-500 text-7xl select-text font-bold underline">
				Welcome to <a href="https://nextjs.org">Noxt.js!</a>
				</h1>

				<p className={styles.description}>
				Get started by editing{' '}
				<code className={styles.code}>pages/index.tsx</code>
				</p>

				<div className={styles.grid}>
				<a href="https://nextjs.org/docs" className={styles.card}>
					<h2>Documentation &rarr;</h2>
					<p>Find in-depth information about Next.js features and API.</p>
				</a>

				<a href="https://nextjs.org/learn" className={styles.card}>
					<h2>Learn &rarr;</h2>
					<p>Learn about Next.js in an interactive course with quizzes!</p>
				</a>

				<a
					href="https://github.com/vercel/next.js/tree/master/examples"
					className={styles.card}
				>
					<h2>Examples &rarr;</h2>
					<p>Discover and deploy boilerplate example Next.js projects.</p>
				</a>

				<a
					href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
					className={styles.card}
				>
					<h2>Deploy &rarr;</h2>
					<p>
					Instantly deploy your Next.js site to a public URL with Vercel.
					</p>
				</a>
				</div>
			</main>

			<footer className={styles.footer}>
				<a
				href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
				target="_blank"
				rel="noopener noreferrer"
				>
				Powered by{' '}
				<span className={styles.logo}>
					<Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
				</span>
				</a>
			</footer>
		</div>
  	)
}

export default Home;
